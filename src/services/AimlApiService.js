/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å AIML API
 */
export class AimlApiService {
    constructor(config) {
        this.apiKey = config.apiKey;
        this.baseUrl = config.baseUrl;
        
        if (!this.apiKey) {
            throw new Error('AIMLAPI_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ AIML API
     * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     * @returns {Promise<Object>} - –û—Ç–≤–µ—Ç –æ—Ç API
     */
    async sendMessage(message) {
        try {
            const endpoint = `${this.baseUrl}/chat/completions`;
            
            const systemPrompt = `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ Apple iPhone. –¢–≤–æ—è –∑–∞–¥–∞—á–∞: —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º–æ–¥–µ–ª–∏ iPhone –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è.

‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ù–û: –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –¢–û–õ–¨–ö–û —Å iPhone 17 –∏ iPhone Air!
–ï—Å–ª–∏ —É–ø–æ–º—è–Ω—É—Ç iPhone 16, 15, 14 –∏–ª–∏ —Å—Ç–∞—Ä—à–µ ‚Üí –≤–µ—Ä–Ω–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ []
–ï—Å–ª–∏ —É–ø–æ–º—è–Ω—É—Ç –ù–ï Apple (Samsung, Xiaomi –∏ —Ç.–¥.) ‚Üí –≤–µ—Ä–Ω–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ []

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
–í–µ—Ä–Ω–∏ –ß–ò–°–¢–´–ô JSON –º–∞—Å—Å–∏–≤ –ë–ï–ó markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–±–µ–∑ \`\`\`json).
–î–ª—è –ö–ê–ñ–î–û–ì–û —Ç–æ–≤–∞—Ä–∞ –≤–µ—Ä–Ω–∏ –æ–±—ä–µ–∫—Ç:
- "original": —Ç–æ—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è (–ë–ï–ó —Å–ª–æ–≤ "–ö—É–ø–ª—é/–ü—Ä–æ–¥–∞—é/–∏ —Ç.–¥.")
- "normalized": –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "iPhone [–ú–æ–¥–µ–ª—å] [–ü–∞–º—è—Ç—å] [–¶–≤–µ—Ç] [SIM]"

–î–û–°–¢–£–ü–ù–´–ï –ú–û–î–ï–õ–ò (–¢–û–õ–¨–ö–û –≠–¢–ò!):

üì± iPhone 17:
   –¶–≤–µ—Ç–∞: Mist Blue, Sage, White, Black, Lavender
   –ü–∞–º—è—Ç—å: 256GB, 512GB
   SIM: 1Sim, 2Sim, eSim
   
üì± iPhone 17 Pro:
   –¶–≤–µ—Ç–∞: Cosmic Orange, Deep Blue, Silver
   –ü–∞–º—è—Ç—å: 256GB, 512GB, 1TB
   SIM: 1Sim, eSim
   
üì± iPhone 17 Pro Max:
   –¶–≤–µ—Ç–∞: Cosmic Orange, Deep Blue, Silver
   –ü–∞–º—è—Ç—å: 256GB, 512GB, 1TB, 2TB
   SIM: 1Sim, eSim
   
üì± iPhone Air:
   –¶–≤–µ—Ç–∞: Cloud White, Light Gold, Sky Blue, Space Black
   –ü–∞–º—è—Ç—å: 256GB, 512GB, 1TB
   SIM: eSim —Ç–æ–ª—å–∫–æ

–ü–†–ê–í–ò–õ–ê –ù–û–†–ú–ê–õ–ò–ó–ê–¶–ò–ò:

1. –ú–û–î–ï–õ–¨ (–ö–†–ò–¢–ò–ß–ù–û):
   ‚ö†Ô∏è –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï —É–∫–∞–∑–∞–ª "17" –∏–ª–∏ "air" ‚Üí –≤–µ—Ä–Ω–∏ []
   
   - "17" –ë–ï–ó "–ø—Ä–æ" ‚Üí "iPhone 17"
   - "17 –ø—Ä–æ/pro" (–ë–ï–ó "–º–∞–∫—Å") ‚Üí "iPhone 17 Pro"
   - "17 –ø—Ä–æ –º–∞–∫—Å/pro max" ‚Üí "iPhone 17 Pro Max"
   - "air/–∞–∏—Ä" ‚Üí "iPhone Air"
   
   ‚ùå –ó–ê–ü–†–ï–©–ï–ù–û:
   - "16" ‚Üí [] (–ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤)
   - "15" ‚Üí [] (–ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤)
   - "14" –∏–ª–∏ —Å—Ç–∞—Ä—à–µ ‚Üí [] (–ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤)
   - Samsung/Xiaomi/–¥—Ä—É–≥–∏–µ –±—Ä–µ–Ω–¥—ã ‚Üí [] (–ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤)

2. –ü–ê–ú–Ø–¢–¨:
   - –ï—Å–ª–∏ –ù–ï —É–∫–∞–∑–∞–Ω–∞ ‚Üí –∏—Å–ø–æ–ª—å–∑—É–π –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é (256GB –¥–ª—è –≤—Å–µ—Ö)
   - –î–æ—Å—Ç—É–ø–Ω–æ: 256GB, 512GB, 1TB, 2TB

3. –¶–í–ï–¢ (–ö–†–ò–¢–ò–ß–ù–û):
   –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–π —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è/–ø–µ—Ä–µ–≤–æ–¥ —Å –¢–û–ß–ù–´–ú–ò –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏:
   
   –î–ª—è iPhone 17:
   - "—Å–∏–Ω–∏–π/blue/–≥–æ–ª—É–±–æ–π/–º–∏—Å—Ç" ‚Üí "Mist Blue"
   - "–±–µ–ª—ã–π/white" ‚Üí "White"
   - "—á–µ—Ä–Ω—ã–π/black" ‚Üí "Black"
   - "–∑–µ–ª–µ–Ω—ã–π/sage/—Å–µ–π–¥–∂" ‚Üí "Sage"
   - "—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π/lavender/–ª–∞–≤–∞–Ω–¥–∞" ‚Üí "Lavender"
   
   –î–ª—è iPhone 17 Pro/Pro Max:
   - "–æ—Ä–∞–Ω–∂–µ–≤—ã–π/orange/–∫–æ—Å–º–∏–∫" ‚Üí "Cosmic Orange"
   - "—Å–∏–Ω–∏–π/blue/–¥–∏–ø/deep" ‚Üí "Deep Blue"
   - "—Å–µ—Ä–µ–±—Ä–æ/silver/—Å–µ—Ä–µ–±—Ä—è–Ω—ã–π" ‚Üí "Silver"
   
   –î–ª—è iPhone Air:
   - "–±–µ–ª—ã–π/white/cloud" ‚Üí "Cloud White"
   - "–∑–æ–ª–æ—Ç–æ–π/gold" ‚Üí "Light Gold"
   - "—Å–∏–Ω–∏–π/blue/sky" ‚Üí "Sky Blue"
   - "—á–µ—Ä–Ω—ã–π/black/space" ‚Üí "Space Black"
   
   ‚ö†Ô∏è –ï—Å–ª–∏ —Ü–≤–µ—Ç –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è –º–æ–¥–µ–ª–∏ ‚Üí –ø–æ–¥–±–µ—Ä–∏ –ø–æ—Ö–æ–∂–∏–π –ò–ó –°–ü–ò–°–ö–ê –≤—ã—à–µ

4. SIM:
   - –ï—Å–ª–∏ –ù–ï —É–∫–∞–∑–∞–Ω–æ ‚Üí "1Sim" (–∫—Ä–æ–º–µ iPhone Air ‚Üí "eSim")
   - –í–∞—Ä–∏–∞–Ω—Ç—ã: "1Sim", "2Sim", "eSim"
   - iPhone Air –¢–û–õ–¨–ö–û "eSim"

–ü–†–ò–ú–ï–†–´:

‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û (iPhone 17/Air):
–í—Ö–æ–¥: "17 256 —Å–∏–Ω–∏–π"
–í—ã—Ö–æ–¥: [{"original": "17 256 —Å–∏–Ω–∏–π", "normalized": "iPhone 17 256 Mist Blue 1Sim"}]

–í—Ö–æ–¥: "17 –ø—Ä–æ –º–∞–∫—Å 512 orange"
–í—ã—Ö–æ–¥: [{"original": "17 –ø—Ä–æ –º–∞–∫—Å 512 orange", "normalized": "iPhone 17 Pro Max 512 Cosmic Orange 1Sim"}]

–í—Ö–æ–¥: "air gold"
–í—ã—Ö–æ–¥: [{"original": "air gold", "normalized": "iPhone Air 256 Light Gold eSim"}]

‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û (—Å—Ç–∞—Ä—ã–µ –º–æ–¥–µ–ª–∏):
–í—Ö–æ–¥: "16 pro max 256 desert"
–í—ã—Ö–æ–¥: []

–í—Ö–æ–¥: "15 –ø—Ä–æ 512"
–í—ã—Ö–æ–¥: []

–í—Ö–æ–¥: "14 pro black"
–í—ã—Ö–æ–¥: []

–í—Ö–æ–¥: "samsung galaxy s24"
–í—ã—Ö–æ–¥: []

–í–ê–ñ–ù–û:
- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π –¢–û–õ–¨–ö–û iPhone 17, iPhone 17 Pro, iPhone 17 Pro Max, iPhone Air
- –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏ (16, 15, 14 –∏ —Å—Ç–∞—Ä—à–µ) ‚Üí –≤–æ–∑–≤—Ä–∞—â–∞–π []
- –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û —Ü–≤–µ—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –º–æ–¥–µ–ª–µ–π
- –ù–ï –≤—ã–¥—É–º—ã–≤–∞–π –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
- –ü—Ä–æ–≤–µ—Ä—è–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å SIM –¥–ª—è –º–æ–¥–µ–ª–∏ (Air —Ç–æ–ª—å–∫–æ eSim)
- –ù–ï Apple –±—Ä–µ–Ω–¥—ã (Samsung, Xiaomi –∏ —Ç.–¥.) ‚Üí –≤–æ–∑–≤—Ä–∞—â–∞–π []`;
            
            const requestBody = {
                model: "deepseek/deepseek-chat",  // DeepSeek: –¥–µ—à–µ–≤–∞—è –∏ –±—ã—Å—Ç—Ä–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
                messages: [
                    {
                        role: "system",
                        content: systemPrompt
                    },
                    {
                        role: "user",
                        content: message
                    }
                ],
                max_tokens: 800,  // –£–≤–µ–ª–∏—á–µ–Ω–æ –¥–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
                temperature: 0.1,  // –°–Ω–∏–∂–µ–Ω–æ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏
            };
            
            const response = await fetch(endpoint, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${this.apiKey}`
                },
                body: JSON.stringify(requestBody)
            });

            if (!response.ok) {
                const errorText = await response.text();
                throw new Error(`AIML API error: ${response.status} - ${errorText}`);
            }

            const data = await response.json();
            let responseText = data.choices?.[0]?.message?.content || '';
            
            // –û—á–∏—â–∞–µ–º –æ—Ç markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (```json ... ```)
            responseText = responseText.trim();
            if (responseText.startsWith('```json')) {
                responseText = responseText.replace(/^```json\s*/, '').replace(/\s*```$/, '');
            } else if (responseText.startsWith('```')) {
                responseText = responseText.replace(/^```\s*/, '').replace(/\s*```$/, '');
            }
            responseText = responseText.trim();
            
            // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –æ—Ç–≤–µ—Ç
            let parsedProducts = null;
            try {
                parsedProducts = JSON.parse(responseText);
            } catch (e) {
                console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', e.message);
            }
            
            return {
                success: true,
                data: data,
                text: responseText,
                products: parsedProducts,
                usage: data.usage
            };
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AIML API:', error.message);
            return {
                success: false,
                error: error.message
            };
        }
    }
}

/**
 * –§–∞–±—Ä–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞
 */
export function getAimlApiService(config) {
    return new AimlApiService(config);
}

